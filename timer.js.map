{"version":3,"file":"timer.js","sources":["../src/js/timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { split } from 'postcss/lib/list';\n\nconst timerButton = document.querySelector('.timerButton');\n\nlet selectedDate = null;\n\nflatpickr('.timerInput', {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        selectedDate = selectedDates[0];\n        if (selectedDate < Date.now()) {\n            iziToast.error({\n                message: 'Please choose a date in the future',\n                position: 'bottomRight',\n                timeout: 3000,\n            });\n            timerButton.disabled = true;\n        } else {\n            timerButton.disabled = false;\n        }\n    },\n});\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n    return { days, hours, minutes, seconds };\n}\n\ntimerButton.addEventListener('click', () => {\n    timerButton.disabled = true;\n    const timer = setInterval(() => {\n        const time = selectedDate - Date.now();\n        const { days, hours, minutes, seconds } = convertMs(time);\n        // console.log(splitSeconds);\n        document.querySelector('[data-days]').textContent =\n            String(days).length > 1 ? days : '0' + days;\n        document.querySelector('[data-hours]').textContent =\n            String(hours).length > 1 ? hours : '0' + hours;\n        document.querySelector('[data-minutes]').textContent =\n            String(minutes).length > 1 ? minutes : '0' + minutes;\n        document.querySelector('[data-seconds]').textContent =\n            String(seconds).length > 1 ? seconds : '0' + seconds;\n        if (time < 1000) {\n            clearInterval(timer);\n        }\n    });\n});\n"],"names":["timerButton","selectedDate","flatpickr","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","timer","time"],"mappings":"2FAMA,MAAMA,EAAc,SAAS,cAAc,cAAc,EAEzD,IAAIC,EAAe,KAEnBC,EAAU,cAAe,CACrB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBF,EAAeE,EAAc,CAAC,EAC1BF,EAAe,KAAK,OACpBG,EAAS,MAAM,CACX,QAAS,qCACT,SAAU,cACV,QAAS,GACzB,CAAa,EACDJ,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE9B,CACL,CAAC,EAED,SAASK,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEAV,EAAY,iBAAiB,QAAS,IAAM,CACxCA,EAAY,SAAW,GACvB,MAAMW,EAAQ,YAAY,IAAM,CAC5B,MAAMC,EAAOX,EAAe,KAAK,IAAG,EAC9B,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAI,EAExD,SAAS,cAAc,aAAa,EAAE,YAClC,OAAOL,CAAI,EAAE,OAAS,EAAIA,EAAO,IAAMA,EAC3C,SAAS,cAAc,cAAc,EAAE,YACnC,OAAOC,CAAK,EAAE,OAAS,EAAIA,EAAQ,IAAMA,EAC7C,SAAS,cAAc,gBAAgB,EAAE,YACrC,OAAOC,CAAO,EAAE,OAAS,EAAIA,EAAU,IAAMA,EACjD,SAAS,cAAc,gBAAgB,EAAE,YACrC,OAAOC,CAAO,EAAE,OAAS,EAAIA,EAAU,IAAMA,EAC7CE,EAAO,KACP,cAAcD,CAAK,CAE/B,CAAK,CACL,CAAC"}